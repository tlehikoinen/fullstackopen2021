{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","reducers/userReducer.js","services/users.js","reducers/usersAndBlogsReducer.js","store.js","components/Blog.js","components/CreateNewBlog.js","components/Login.js","components/SignIn.js","components/Notification.js","services/login.js","App.js","index.js"],"names":["notificationReducer","state","action","type","timeout","clearTimeout","message","data","notification","baseUrl","token","createNew","newBlog","a","config","headers","Authorization","axios","post","response","addLike","blogId","likes","put","addComment","comment","getAll","get","then","remove","delete","setToken","newToken","getBlogsFromServer","dispatch","blogService","blogs","setBlogs","setNewBlog","blog","removeBlog","id","addLikeToBlog","addCommentToBlog","_id","blogReducer","sort","b","newBlogs","concat","map","s","comments","filter","console","log","setUserInfo","user","name","username","userReducer","loggedIn","password","getUsersAndBlogs","userService","usersAndBlogs","setUsersAndBlogs","userAndBlogs","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Blog","deleteBlog","buttonStyle","background","borderRadius","borderWidth","useState","viewBlog","setViewBlog","showWhenVisible","display","hideWhenVisible","showForOwner","toggleViewBlog","className","style","to","title","author","onClick","href","url","target","rel","window","confirm","CreateNewBlog","create","createNewVisible","toggleCreateNewVisible","setTitle","setAuthor","setUrl","event","preventDefault","Button","variant","onSubmit","value","onChange","LoginForm","login","setSignInVisible","setUsername","setPassword","Form","Group","Label","Control","SignIn","signin","signInVisible","setName","Notification","notificationMessage","useSelector","ErrorNotification","App","useDispatch","useEffect","loggedUserJson","localStorage","getItem","JSON","parse","stateSetUser","createNewBlog","setNotificationWithType","error","Message","handleLogin","loginInfo","loginService","setItem","stringify","handleLogout","clear","handleSignin","signinInfo","addNewComment","updatedBlog","length","time","setTimeout","setNotification","padding","Blogs","Table","striped","Users","u","UserWithBlogs","useParams","userWithBlogs","find","d","IndividualBlog","loggedInUser","individualBlog","newComment","setNewComment","undefined","c","NavigationBar","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","as","LoggedInForm","path","LoggedOutForm","Login","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0caf207.chunk.js","sourcesContent":["const notificationReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n  case 'NEW_NOTIFICATION':\r\n    if(state.timeout !== null) {\r\n      clearTimeout(state.timeout)\r\n    }\r\n    return { ...state, message: action.data.notification, type: action.data.type, timeout: action.data.timeout }\r\n  case 'CLEAR_NOTIFICATION':\r\n    return ''\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const createNotification = (data) => {\r\n  return {\r\n    type: 'NEW_NOTIFICATION',\r\n    data: {\r\n      notification: data.message,\r\n      type: data.type,\r\n      timeout: data.timeout\r\n    }\r\n  }\r\n}\r\n\r\nexport const clearNotification = () => {\r\n  return {\r\n    type: 'CLEAR_NOTIFICATION'\r\n  }\r\n}\r\n\r\n\r\nexport const setNotification = (message, type, time) => {\r\n  return async dispatch => {\r\n    const timeout = setTimeout(() => {\r\n      dispatch(clearNotification())\r\n    }, (time*1000))\r\n    dispatch(createNotification({ message, type, timeout }))\r\n\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `Bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst createNew = async (newBlog) => {\r\n  const config = { headers : { Authorization : token } }\r\n  const response = await axios.post(baseUrl, newBlog, config)\r\n  return response.data\r\n}\r\n\r\nconst addLike = async (blogId, likes) => {\r\n  const config = { headers : { Authorization : token } }\r\n  const response = await axios.put(`${baseUrl}/${blogId}`, { 'likes': likes + 1 }, config)\r\n  return response.data\r\n}\r\n\r\nconst addComment = async (blogId, comment) => {\r\n  const response = await axios.post(`${baseUrl}/${blogId}/comments`, { comment })\r\n  return response.data\r\n}\r\n\r\nconst remove = async (blogId) => {\r\n  const config = { headers : { Authorization : token } }\r\n  const response = await axios.delete(`${baseUrl}/${blogId}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { addComment, addLike, createNew, getAll, remove, setToken }","import blogService from '../services/blogs'\r\n\r\nconst blogReducer = (state = { blogs: [] }, action) => {\r\n  switch(action.type){\r\n  case 'SETBLOGS':\r\n    state.blogs = action.blogs.sort((a,b) => a.likes < b.likes ? 1 : -1)\r\n    return state\r\n  case 'NEWBLOG': {\r\n    const newBlogs = state.blogs.concat(action.blog)\r\n    state.blogs = newBlogs\r\n    return state\r\n  }\r\n  case 'ADDCOMMENT': {\r\n    state.blogs = state.blogs.map(s => s.id === action.id ? { ...s, comments: s.comments.concat(action.comment) } : s)\r\n    return state\r\n  }\r\n  case 'ADDLIKE':\r\n    state.blogs = state.blogs.map(s => s.id === action.id ? { ...s, likes: s.likes+1 } : s)\r\n    return state\r\n\r\n  case 'REMOVEBLOG':\r\n    state.blogs = state.blogs.filter(s => s.id !== action.id)\r\n    return state\r\n\r\n  case 'PRINT':\r\n    console.log(state.blogs)\r\n    return state\r\n\r\n  default:\r\n    return state\r\n\r\n  }\r\n}\r\n\r\nexport const getBlogsFromServer = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch(setBlogs(blogs))\r\n  }\r\n}\r\n\r\n\r\nexport const setBlogs = (blogs) => {\r\n  return {\r\n    type: 'SETBLOGS',\r\n    blogs: blogs\r\n  }\r\n}\r\n\r\nexport const setNewBlog = (blog) => {\r\n  return {\r\n    type: 'NEWBLOG',\r\n    blog: blog\r\n  }\r\n}\r\n\r\nexport const removeBlog = (id) => {\r\n  return {\r\n    type: 'REMOVEBLOG',\r\n    id: id\r\n  }\r\n}\r\n\r\nexport const addLikeToBlog = (id) => {\r\n  return {\r\n    type: 'ADDLIKE',\r\n    id: id\r\n  }\r\n}\r\n\r\nexport const addCommentToBlog = (blogId, comment) => {\r\n  return {\r\n    type: 'ADDCOMMENT',\r\n    id: blogId,\r\n    comment: {\r\n      _id : comment.id,\r\n      comment: comment.comment\r\n    }\r\n  }\r\n}\r\n\r\nexport const printBlogs = () => {\r\n  return {\r\n    type: 'PRINT'\r\n  }\r\n}\r\n\r\nexport default blogReducer","\r\nconst userReducer = ( state = { user: { }, loggedIn:false } , action ) => {\r\n  switch (action.type) {\r\n  case 'CLEAR':\r\n    state.user = {}\r\n    state.loggedIn = false\r\n    return state\r\n  case 'SETUSER':\r\n    state.user.name = action.user.name\r\n    state.user.token = action.user.token\r\n    state.user.username = action.user.username\r\n    state.loggedIn = true\r\n    return state\r\n  case 'GETINFO':\r\n    return state\r\n  case 'PRINTUSER':\r\n    return state\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\n\r\nexport const setUserInfo = (user) => {\r\n  return {\r\n    type: 'SETUSER',\r\n    user: {\r\n      name : user.name,\r\n      token : user.token,\r\n      username : user.username\r\n    }\r\n  }\r\n}\r\n\r\nexport const getUserInfo = () => {\r\n  return {\r\n    type: 'GETINFO'\r\n  }\r\n}\r\n\r\nexport const clearUserInfo = () => {\r\n  return {\r\n    type: 'CLEAR'\r\n  }\r\n}\r\n\r\nexport const printUserInfo = () => {\r\n  return {\r\n    type: 'PRINTUSER'\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst createNew = async (user) => {\r\n  const response = await axios.post(baseUrl, { username: user.username, name: user.name, password: user.password } )\r\n  return response\r\n\r\n}\r\n\r\n\r\n\r\nexport default { createNew, getAll }","import userService from '../services/users'\r\n\r\nconst userAndBlogs = (state = { data: [] }, action) => {\r\n  switch (action.type) {\r\n  case 'SETALL': {\r\n    state.data = action.data\r\n    return state\r\n  }\r\n  case 'PRINTALL': {\r\n    console.log(state.data)\r\n    return state\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n\r\n}\r\n\r\nexport const getUsersAndBlogs = () => {\r\n  return async dispatch => {\r\n    const usersAndBlogs = await userService.getAll()\r\n    dispatch(setUsersAndBlogs(usersAndBlogs))\r\n  }\r\n}\r\n\r\nexport const setUsersAndBlogs = (usersAndBlogs) => {\r\n  return {\r\n    type: 'SETALL',\r\n    data: usersAndBlogs\r\n  }\r\n}\r\n\r\nexport const printUsersAndBlogs = () => {\r\n  return {\r\n    type: 'PRINTALL'\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default userAndBlogs","import { createStore, combineReducers, applyMiddleware }  from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport blogReducer from './reducers/blogReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport usersAndBlogs from './reducers/usersAndBlogsReducer'\r\n\r\nconst reducer = combineReducers({\r\n  notification: notificationReducer,\r\n  blogs : blogReducer,\r\n  user : userReducer,\r\n  usersAndBlogs : usersAndBlogs\r\n})\r\n\r\nconst store = createStore(\r\n  reducer, composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Blog = ({ blog, user, addLike, deleteBlog }) => {\r\n  // const blogStyle = {\r\n  //   paddingTop: 10,\r\n  //   paddingLeft: 2,\r\n  //   border: 'solid',\r\n  //   borderWidth: 1,\r\n  //   marginBottom: 5\r\n  // }\r\n\r\n  const buttonStyle = {\r\n    background:'none',\r\n    borderRadius:'5px',\r\n    borderWidth:'1px',\r\n  }\r\n\r\n\r\n  const [viewBlog, setViewBlog] = useState(false)\r\n  const showWhenVisible = { display: viewBlog ? '' : 'none' }\r\n  const hideWhenVisible = { display: viewBlog ? 'none' : '' }\r\n  const showForOwner = { display: user.username === blog.user.username ? '' : 'none' }\r\n\r\n  const toggleViewBlog = () => {\r\n    setViewBlog(!viewBlog)\r\n  }\r\n\r\n  const remove = () => {\r\n    if(window.confirm('you sure')){\r\n      deleteBlog(blog.id)\r\n    }\r\n  }\r\n\r\n  const incrementLike = () => {\r\n    addLike(blog.id, blog.likes)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <th className=\"visibleDiv\" style={hideWhenVisible}>\r\n        <Link to={`/blogs/${blog.id}`} >{blog.title} {blog.author}</Link> <button type=\"button\" style={buttonStyle} onClick={toggleViewBlog}>View</button>\r\n      </th>\r\n      <th className=\"hiddenDiv\" style={showWhenVisible}>\r\n        <h3><Link to={`/blogs/${blog.id}`}>{blog.title}</Link></h3>\r\n        By author: {blog.author}<br/>\r\n        Url: <a href={blog.url} target=\"_blank\" rel=\"noreferrer\">{blog.url}</a><br/>\r\n        Likes: {blog.likes} <button type=\"button\" id=\"like-button\" style={buttonStyle} onClick={incrementLike}>Like</button> <br/>\r\n        <button type=\"button\" style={buttonStyle} onClick={toggleViewBlog}>Hide</button>\r\n        <div style={showForOwner}>\r\n          <button type=\"button\" style={buttonStyle} onClick={remove}>Remove</button>\r\n        </div>\r\n      </th>\r\n    </>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  blog: PropTypes.object.isRequired,\r\n  deleteBlog: PropTypes.func.isRequired,\r\n  addLike: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Blog","import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst CreateNewBlog = ({ create, createNewVisible, toggleCreateNewVisible }) => {\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const hideWhenVisible = { display: createNewVisible ? 'none' : '' }\r\n  const showWhenVisible = { display: createNewVisible ? '' : 'none' }\r\n\r\n  const createNew = async event => {\r\n    event.preventDefault()\r\n    const blog = {\r\n      title,\r\n      author,\r\n      url\r\n    }\r\n    create(blog)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button variant=\"primary\" type=\"button\" onClick={toggleCreateNewVisible}>Create new</Button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        <form onSubmit={createNew}>\r\n          <h2>Create New</h2>\r\n          <div>\r\n                        title:\r\n            <input\r\n              id=\"newBlogTitle\"\r\n              type=\"text\"\r\n              value={title}\r\n              name=\"Title\"\r\n              onChange={({ target }) => setTitle(target.value)}></input>\r\n          </div>\r\n          <div>\r\n                        author:\r\n            <input\r\n              id=\"newBlogAuthor\"\r\n              type=\"text\"\r\n              value={author}\r\n              name=\"Author\"\r\n              onChange={({ target }) => setAuthor(target.value)}></input>\r\n          </div>\r\n          <div>\r\n                        url:\r\n            <input\r\n              id=\"newBlogUrl\"\r\n              type=\"text\"\r\n              value={url}\r\n              name=\"Url\"\r\n              onChange={({ target }) => setUrl(target.value)}></input>\r\n          </div>\r\n          <Button variant=\"success\"id=\"submitNewBlog-button\" type=\"submit\">Create</Button>\r\n          <Button variant=\"danger\" id=\"cancelNewBlog-button\" type=\"button\" onClick={toggleCreateNewVisible}>Cancel</Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n\r\n\r\n}\r\nexport default CreateNewBlog","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst LoginForm = ({ login, setSignInVisible }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const onLogin = (event) => {\r\n    event.preventDefault()\r\n    const user = {\r\n      username,\r\n      password\r\n    }\r\n    login(user)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Log in to application</h2>\r\n      <Form onSubmit={onLogin}>\r\n        <Form.Group>\r\n          <Form.Label>username</Form.Label>\r\n          <Form.Control\r\n            id='username'\r\n            type='text'\r\n            name='username'\r\n            value={username}\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n          <Form.Label>password</Form.Label>\r\n          <Form.Control\r\n            id='password'\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n          <Button variant=\"primary\" id=\"login-button\" type=\"submit\" >Login</Button>\r\n          <Button variant=\"primary\" id=\"show-signin\" type=\"button\" onClick={setSignInVisible}>Sign in</Button>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SignIn = ( { signin, signInVisible }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [password, setPassword] = useState ('')\r\n  const display = { display: signInVisible ? 'block' : 'none' }\r\n\r\n  const onSignin = (event) => {\r\n    event.preventDefault()\r\n    const user = {\r\n      username, name, password\r\n    }\r\n    signin(user)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={display}>\r\n        <h2>Create new account</h2>\r\n        <Form onSubmit={onSignin}>\r\n          <Form.Group>\r\n            <Form.Label>username</Form.Label>\r\n            <Form.Control\r\n              id='SignInUsername'\r\n              type='text'\r\n              name='username'\r\n              value={username}\r\n              onChange={({ target }) => setUsername(target.value)}\r\n            />\r\n            <Form.Label>name</Form.Label>\r\n            <Form.Control\r\n              id='SignInName'\r\n              type='text'\r\n              name='name'\r\n              value={name}\r\n              onChange={({ target }) => setName(target.value)}\r\n            />\r\n            <Form.Label>password</Form.Label>\r\n            <Form.Control\r\n              id='SignInPassword'\r\n              type='password'\r\n              name='password'\r\n              value={password}\r\n              onChange={({ target }) => setPassword(target.value)}\r\n            />\r\n            <Button variant=\"primary\" id=\"signin-button\" type=\"submit\" >Submit</Button>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default SignIn","\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n\r\n  const notificationMessage = useSelector(state => state.notification.message )\r\n  const type = useSelector(state => state.notification.type)\r\n\r\n  const ErrorNotification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    return (\r\n      <div className=\"errorNotification\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    return (\r\n      <div className=\"notification\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  switch(type){\r\n  case 'error':\r\n    return(\r\n      <ErrorNotification message={notificationMessage} />\r\n    )\r\n  case 'default':\r\n    return(\r\n      <Notification message={notificationMessage} />\r\n    )\r\n  default:\r\n    return(\r\n      <>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\n\r\nconst login = async (user) => {\r\n  const response = await axios.post(baseUrl, user)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch, Route, Link, useParams\r\n\r\n} from 'react-router-dom'\r\nimport Blog from './components/Blog'\r\nimport CreateNewBlog from './components/CreateNewBlog'\r\nimport Login from './components/Login'\r\nimport SignIn from './components/SignIn'\r\nimport Notification from './components/Notification'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport userService from './services/users'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setNotification } from './reducers/notificationReducer'\r\nimport { addCommentToBlog, getBlogsFromServer, setNewBlog, addLikeToBlog, removeBlog } from './reducers/blogReducer'\r\nimport { clearUserInfo, setUserInfo } from './reducers/userReducer'\r\nimport { getUsersAndBlogs } from './reducers/usersAndBlogsReducer'\r\nimport { Button, Table, Navbar, Nav } from 'react-bootstrap'\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [createNewVisible, toggleCreateNewVisible] = useState(false)\r\n  const [signInVisible, setSignInVisible] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getBlogsFromServer())\r\n    dispatch(getUsersAndBlogs())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJson = window.localStorage.getItem('loggedInUser')\r\n    if (loggedUserJson) {\r\n      const user = JSON.parse(loggedUserJson)\r\n      stateSetUser(user)\r\n      blogService.setToken(user.token)\r\n    } else {\r\n      dispatch(clearUserInfo())\r\n    }\r\n  }, [])\r\n\r\n  const addLike = async (id, likes) => {\r\n    try {\r\n      await blogService.addLike(id, likes)\r\n      dispatch(addLikeToBlog(id))\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const createNewBlog = async (blog) => {\r\n    try {\r\n      const newBlog = await blogService.createNew( blog )\r\n      setNotificationWithType(`${newBlog.title} by ${newBlog.author} was successfully added`, 'default', 3)\r\n      dispatch(setNewBlog(newBlog))\r\n      dispatch(getBlogsFromServer())\r\n      dispatch(getUsersAndBlogs())\r\n      toggleCreateNewVisible(!createNewVisible)\r\n    } catch (exception) {\r\n      setNotificationWithType(exception.response.data.error, 'error', 3)\r\n    }\r\n  }\r\n\r\n  const deleteBlog = async (id) => {\r\n    try {\r\n      const response = await blogService.remove(id)\r\n      dispatch(removeBlog(id))\r\n      dispatch(getUsersAndBlogs())\r\n      setNotificationWithType(response.Message, 'default', 3)\r\n    } catch (error) {\r\n      dispatch(getBlogsFromServer())\r\n      setNotificationWithType('Was already deleted', 'error', 3)\r\n    }\r\n\r\n  }\r\n\r\n  const handleLogin = async (loginInfo) => {\r\n    try {\r\n      const user = await loginService.login(loginInfo)\r\n      dispatch(setUserInfo(user))\r\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      setNotificationWithType('Logged in successfully', 'default', 1)\r\n    } catch (exception) {\r\n      setNotificationWithType('Wrong credentials', 'error', 5)\r\n    }\r\n  }\r\n\r\n  const handleLogout = (event) => {\r\n    event.preventDefault()\r\n    window.localStorage.clear()\r\n    dispatch(clearUserInfo())\r\n    setNotificationWithType('Logged out successfully', 'default', 1)\r\n  }\r\n\r\n  const handleSignin = async (signinInfo) => {\r\n    try {\r\n      await userService.createNew(signinInfo)\r\n      setSignInVisible(!signInVisible)\r\n      dispatch(getUsersAndBlogs())\r\n    } catch (error) {\r\n      console.log(error)\r\n      setNotificationWithType(error.message, 'error', 2)\r\n    }\r\n  }\r\n\r\n  const addNewComment = async (blogId, comment, addNewComment) => {\r\n    try{\r\n      const response = await blogService.addComment(blogId, comment)\r\n      const updatedBlog = response.message.comments[response.message.comments.length-1]\r\n      dispatch(addCommentToBlog(blogId, comment = { id : updatedBlog._id, comment: updatedBlog.comment } ))\r\n      addNewComment('')\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }\r\n\r\n  const setNotificationWithType = (message, type, time) => {\r\n    dispatch(setNotification(message, type, time))\r\n  }\r\n\r\n  const stateSetUser = (user) => {\r\n    dispatch(setUserInfo(user))\r\n  }\r\n\r\n  const padding = {\r\n    padding: '10px'\r\n  }\r\n\r\n  const Blogs = () => {\r\n    const blogs = useSelector(state => state.blogs.blogs)\r\n    const user = useSelector ( state => state.user.user)\r\n    return (\r\n      <div>\r\n        <h2>Blogs</h2>\r\n        <div className=\"blogs\">\r\n          <Table striped>\r\n            <tbody>\r\n              {blogs.map(blog =>\r\n                <tr key={blog.id}><Blog key={blog.id} blog={blog} user={user} addLike={addLike} deleteBlog={deleteBlog} /></tr>)}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const Users = () => {\r\n    const usersAndBlogs = useSelector(state => state.usersAndBlogs.data)\r\n    return (\r\n      <div>\r\n        <h2>Users</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Blogs</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {usersAndBlogs.map(u =>\r\n              <tr key={u.id}>\r\n                <td><Link to={`/users/${u.id}`}>{u.name}</Link> </td>\r\n                <td>{u.blogs.length}</td>\r\n              </tr>)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const UserWithBlogs = () => {\r\n    const usersAndBlogs = useSelector(state => state.usersAndBlogs)\r\n    const id = useParams().id\r\n    const userWithBlogs = usersAndBlogs.data.find(d => d.id === id)\r\n\r\n    if (!userWithBlogs) {\r\n      return null\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>{userWithBlogs.name}</h2>\r\n        <h3>Added blogs</h3>\r\n        <ul>\r\n          {userWithBlogs.blogs.map(b =>\r\n            <li key={b.id}><Link to={`/blogs/${b.id}`}>{b.title}</Link></li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const IndividualBlog = () => {\r\n    const blogId = useParams().id\r\n    const blogs = useSelector(state => state.blogs.blogs)\r\n    const loggedInUser = useSelector(state => state.user.user.name)\r\n    const individualBlog = blogs.find(b => b.id === blogId)\r\n\r\n    const [newComment, setNewComment] = useState('')\r\n\r\n    if(!individualBlog || !loggedInUser) {\r\n      return null\r\n    }\r\n    const comments = individualBlog.comments.length !==0 ? individualBlog.comments : undefined\r\n    const showForOwner = { display:  loggedInUser === individualBlog.user.name ? '' : 'none' }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>{individualBlog.title} by {individualBlog.author}</h2>\r\n          <p><a href={individualBlog.url}>{individualBlog.url}</a></p>\r\n          <div>\r\n            {individualBlog.likes} likes\r\n            <button type=\"button\" onClick={() => addLike(individualBlog.id, individualBlog.likes)}> like</button>\r\n            <button style={showForOwner} type=\"remove\" onClick={() => { if (window.confirm('you sure')) { { deleteBlog(individualBlog.id) } } }}>Delete</button>\r\n          </div>\r\n          <p>Added by {individualBlog.user.name}</p>\r\n        </div>\r\n        <div>\r\n          <h2>Comments</h2>\r\n          <input value={newComment} onChange={({ target }) => setNewComment(target.value)} /><button type=\"button\" onClick={() => addNewComment(individualBlog.id, newComment, setNewComment)}>Add comment</button>\r\n          {comments !== undefined\r\n            ?\r\n            <div>\r\n              <ul>\r\n                {comments.map(c =>\r\n                  <li key={c._id}>{c.comment}</li>)}\r\n              </ul>\r\n            </div>\r\n            : <h2>No comments yet</h2>}\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const NavigationBar = () => {\r\n    const user = useSelector(state => state.user.user)\r\n\r\n    return(\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#\" as=\"span\">\r\n              <Link style={padding} to=\"/\">home</Link>\r\n            </Nav.Link>\r\n            <Nav.Link href=\"#\" as=\"span\">\r\n              <Link style={padding} to=\"/blogs\">blogs</Link>\r\n            </Nav.Link>\r\n            <Nav.Link href=\"#\" as=\"span\">\r\n              <Link style={padding} to=\"/users\">users</Link>\r\n            </Nav.Link>\r\n            <Nav.Link href=\"#\" as=\"span\">\r\n              {user.name} logged in <Button variant=\"danger\" onClick={handleLogout}>logout</Button>\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n\r\n\r\n  }\r\n\r\n  const LoggedInForm = () => {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <NavigationBar/>\r\n          <h2>Blog app</h2>\r\n          <Switch>\r\n            <Route path='/blogs/:id'>\r\n              <IndividualBlog />\r\n            </Route>\r\n            <Route path='/blogs'>\r\n              <div>\r\n                <CreateNewBlog\r\n                  createNewVisible={createNewVisible}\r\n                  toggleCreateNewVisible={() => toggleCreateNewVisible(!createNewVisible)}\r\n                  create={createNewBlog} />\r\n                <Blogs />\r\n              </div>\r\n            </Route>\r\n            <Route path='/users/:id'>\r\n              <UserWithBlogs />\r\n            </Route>\r\n            <Route path='/users'>\r\n              <Users />\r\n            </Route>\r\n            <Route path='/'>\r\n              <h2>Blogs are great</h2>\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const LoggedOutForm = () => {\r\n    return (\r\n      <div>\r\n        <Login\r\n          login={handleLogin} setSignInVisible={() => setSignInVisible(!signInVisible)} />\r\n        <SignIn signin={handleSignin} signInVisible={signInVisible}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Notification message={ useSelector(state => state.message)} type={ useSelector(state => state.type)} />\r\n      { (useSelector(state => state.user.loggedIn)) === false && <LoggedOutForm />}\r\n      { (useSelector(state => state.user.loggedIn)) === true && <LoggedInForm />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'))"],"sourceRoot":""}